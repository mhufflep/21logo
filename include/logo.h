#ifndef LOGO_PRINTER_H
# define LOGO_PRINTER_H
	
# include <string.h>
# include <stdio.h>
# include <sys/time.h>
# include <stdlib.h>
# include <ctype.h>

const char   *FG_COLOR_BLACK = "\033[0;30m";
const char   *FG_COLOR_RED =	"\033[0;31m";
const char   *FG_COLOR_GREEN = "\033[0;32m";
const char   *FG_COLOR_YELLOW = "\033[0;33m";
const char   *FG_COLOR_BLUE = "\033[0;34m";
const char   *FG_COLOR_MAGENTA = "\033[0;35m";
const char   *FG_COLOR_CYAN = "\033[0;36m";
const char   *FG_COLOR_WHITE = "\033[0;37m";

const int symbols[] = {
    0b00110010010100101001001100000000, // 0
    0b01000001000010000100001000000000, // 1
    0b01110000010011001000001110000000, // 2
    0b01110000010111000001011100000000, // 3
    0b00001001010100101111000010000000, // 4
    0b01111010000011000001011100000000, // 5
    0b00111010000111101001001110000000, // 6
    0b01111000010001000100010000000000, // 7
    0b00110010010011001001001100000000, // 8
    0b00111010010011100010001000000000, // 9

    0b00110010010111101001010010000000, // A
    0b01110010010111001001011100000000, // B
    0b00111010000100001000001110000000, // C
    0b01110010010100101001011100000000, // D
    0b01110010000111001000011100000000, // E
    0b01110010000111001000010000000000, // F
    0b00111010000100101001001110000000, // G
    0b01001010010111101001010010000000, // H
    0b00100001000010000100001000000000, // I
    0b00001000010100101001001100000000, // J
    0b01001010100110001010010010000000, // K
    0b01000010000100001000011110000000, // L
    0b10001110111010110001100010000000, // M
    0b01001011010101101001010010000000, // N
    0b01111010010100101001011110000000, // O
    0b01111010010111101000010000000000, // P
    0b01111010010100101011011110000000, // Q
    0b01111010010111101010010010000000, // R
    0b00111010000011000001011100000000, // S
    0b11111001000010000100001000000000, // T
    0b01001010010100101001001100000000, // U
    0b10001100011000101010001000000000, // V
    0b10001100011010111011100010000000, // W
    0b10001010100010001010100010000000, // X
    0b10001100010101000100001000000000, // Y
    0b01111000010011001000011110000000, // Z

    0b00000000000000000000000000000000, // space
};

# define EMPTY ' '

# define SYMBOL_WIDTH 5
# define SYMBOL_HEIGHT 5

# define SCALE_Y 4
# define SCALE_X 2

# define RANDOM_SYMBOL (char)-1
# define RANDOM_MAX '~'
# define RANDOM_MIN ' '

# define DELAY_BTWN_FRAMES_MS 10000
# define DELAY_BTWN_ITER_MS 1000000
# define MAX_COUNTER 500
# define DIVIDER (MAX_COUNTER / SYMBOL_HEIGHT)

void		logo_cycle(int *idxs, size_t len);
void	    print_logo(int opened[], int idxs[], int idxs_len);
void 	    print_line(int opened[], int idxs[], int idxs_len, int line_num, int offset);
void		print_opened_line(const char *color, char line);
void        print_closed_line(const char *color);
void        print_symbol(const char c, const char *color);

void		delay(int milli_seconds); 
char	    gen_char(char min, char max);

#endif
